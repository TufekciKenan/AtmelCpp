
FirstCpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000003cc  00000460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800104  00800104  00000464  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000494  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd3  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a14  00000000  00000000  0000135f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d8  00000000  00000000  00001d73  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  0000234c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000540  00000000  00000000  000024a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006d1  00000000  00000000  000029e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  000030b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 6d 00 	jmp	0xda	; 0xda <__vector_1>
   8:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_2>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  68:	e1 00       	.word	0x00e1	; ????
  6a:	e5 00       	.word	0x00e5	; ????
  6c:	e9 00       	.word	0x00e9	; ????
  6e:	ed 00       	.word	0x00ed	; ????
  70:	f1 00       	.word	0x00f1	; ????
  72:	f5 00       	.word	0x00f5	; ????
  74:	f9 00       	.word	0x00f9	; ????
  76:	fd 00       	.word	0x00fd	; ????
  78:	01 01       	movw	r0, r2
  7a:	05 01       	movw	r0, r10
  7c:	09 01       	movw	r0, r18
  7e:	0d 01       	movw	r0, r26
  80:	11 01       	movw	r2, r2
  82:	15 01       	movw	r2, r10

00000084 <__ctors_start>:
  84:	96 01       	movw	r18, r12

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	ec ec       	ldi	r30, 0xCC	; 204
  9a:	f3 e0       	ldi	r31, 0x03	; 3
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
  9e:	05 90       	lpm	r0, Z+
  a0:	0d 92       	st	X+, r0
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b1 07       	cpc	r27, r17
  a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
  a8:	21 e0       	ldi	r18, 0x01	; 1
  aa:	a4 e0       	ldi	r26, 0x04	; 4
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
  b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
  b2:	ac 30       	cpi	r26, 0x0C	; 12
  b4:	b2 07       	cpc	r27, r18
  b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>

000000b8 <__do_global_ctors>:
  b8:	10 e0       	ldi	r17, 0x00	; 0
  ba:	c3 e4       	ldi	r28, 0x43	; 67
  bc:	d0 e0       	ldi	r29, 0x00	; 0
  be:	04 c0       	rjmp	.+8      	; 0xc8 <__do_global_ctors+0x10>
  c0:	21 97       	sbiw	r28, 0x01	; 1
  c2:	fe 01       	movw	r30, r28
  c4:	0e 94 bc 01 	call	0x378	; 0x378 <__tablejump2__>
  c8:	c2 34       	cpi	r28, 0x42	; 66
  ca:	d1 07       	cpc	r29, r17
  cc:	c9 f7       	brne	.-14     	; 0xc0 <__do_global_ctors+0x8>
  ce:	0e 94 3d 01 	call	0x27a	; 0x27a <main>
  d2:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <__vector_1>:
}

double ExtInt::getAngel(){
	return sayac/pulsePerRev*360;
	
}
  da:	1f 92       	push	r1
  dc:	0f 92       	push	r0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	0f 92       	push	r0
  e2:	11 24       	eor	r1, r1
  e4:	8f 93       	push	r24
  e6:	9f 93       	push	r25
  e8:	af 93       	push	r26
  ea:	bf 93       	push	r27
  ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  f8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
  fc:	01 96       	adiw	r24, 0x01	; 1
  fe:	a1 1d       	adc	r26, r1
 100:	b1 1d       	adc	r27, r1
 102:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 106:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 10a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 10e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 112:	bf 91       	pop	r27
 114:	af 91       	pop	r26
 116:	9f 91       	pop	r25
 118:	8f 91       	pop	r24
 11a:	0f 90       	pop	r0
 11c:	0f be       	out	0x3f, r0	; 63
 11e:	0f 90       	pop	r0
 120:	1f 90       	pop	r1
 122:	18 95       	reti

00000124 <__vector_2>:
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	9f 93       	push	r25
 132:	af 93       	push	r26
 134:	bf 93       	push	r27
 136:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 13a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 142:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	a1 09       	sbc	r26, r1
 14a:	b1 09       	sbc	r27, r1
 14c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 150:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 154:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 158:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 15c:	bf 91       	pop	r27
 15e:	af 91       	pop	r26
 160:	9f 91       	pop	r25
 162:	8f 91       	pop	r24
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <_ZN6ExtIntC1Ej>:
 16e:	fc 01       	movw	r30, r24
 170:	71 83       	std	Z+1, r23	; 0x01
 172:	60 83       	st	Z, r22
 174:	08 95       	ret

00000176 <_ZN6ExtInt10setExtInt0Ev>:
 176:	e9 e6       	ldi	r30, 0x69	; 105
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	80 81       	ld	r24, Z
 17c:	83 60       	ori	r24, 0x03	; 3
 17e:	80 83       	st	Z, r24
 180:	8d b3       	in	r24, 0x1d	; 29
 182:	81 60       	ori	r24, 0x01	; 1
 184:	8d bb       	out	0x1d, r24	; 29
 186:	78 94       	sei
 188:	08 95       	ret

0000018a <_ZN6ExtInt10setExtInt1Ev>:
 18a:	e9 e6       	ldi	r30, 0x69	; 105
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	8c 60       	ori	r24, 0x0C	; 12
 192:	80 83       	st	Z, r24
 194:	8d b3       	in	r24, 0x1d	; 29
 196:	82 60       	ori	r24, 0x02	; 2
 198:	8d bb       	out	0x1d, r24	; 29
 19a:	78 94       	sei
 19c:	08 95       	ret

0000019e <_ZN6ExtInt8getSayacEv>:

long ExtInt::getSayac(){
	return sayac;
 19e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1a2:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1a6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1aa:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	
 1ae:	08 95       	ret

000001b0 <_Z9setPinDDRh>:
#include "GenIO.h"

void setPinDDR(uint8_t pn){
	switch (pn)
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	8e 30       	cpi	r24, 0x0E	; 14
 1b4:	91 05       	cpc	r25, r1
 1b6:	e0 f5       	brcc	.+120    	; 0x230 <_Z9setPinDDRh+0x80>
 1b8:	fc 01       	movw	r30, r24
 1ba:	ec 5c       	subi	r30, 0xCC	; 204
 1bc:	ff 4f       	sbci	r31, 0xFF	; 255
 1be:	0c 94 bc 01 	jmp	0x378	; 0x378 <__tablejump2__>
	{
		case  0	:	DDRD|=(1<<PIND0); break;
 1c2:	8a b1       	in	r24, 0x0a	; 10
 1c4:	81 60       	ori	r24, 0x01	; 1
 1c6:	8a b9       	out	0x0a, r24	; 10
 1c8:	08 95       	ret
		case  1	:	DDRD|=(1<<PIND1); break;
 1ca:	8a b1       	in	r24, 0x0a	; 10
 1cc:	82 60       	ori	r24, 0x02	; 2
 1ce:	8a b9       	out	0x0a, r24	; 10
 1d0:	08 95       	ret
		case  2	:	DDRD|=(1<<PIND2); break;
 1d2:	8a b1       	in	r24, 0x0a	; 10
 1d4:	84 60       	ori	r24, 0x04	; 4
 1d6:	8a b9       	out	0x0a, r24	; 10
 1d8:	08 95       	ret
		case  3	:	DDRD|=(1<<PIND3); break;
 1da:	8a b1       	in	r24, 0x0a	; 10
 1dc:	88 60       	ori	r24, 0x08	; 8
 1de:	8a b9       	out	0x0a, r24	; 10
 1e0:	08 95       	ret
		case  4	:	DDRD|=(1<<PIND4); break;
 1e2:	8a b1       	in	r24, 0x0a	; 10
 1e4:	80 61       	ori	r24, 0x10	; 16
 1e6:	8a b9       	out	0x0a, r24	; 10
 1e8:	08 95       	ret
		case  5	:	DDRD|=(1<<PIND5); break;
 1ea:	8a b1       	in	r24, 0x0a	; 10
 1ec:	80 62       	ori	r24, 0x20	; 32
 1ee:	8a b9       	out	0x0a, r24	; 10
 1f0:	08 95       	ret
		case  6	:	DDRD|=(1<<PIND6); break;
 1f2:	8a b1       	in	r24, 0x0a	; 10
 1f4:	80 64       	ori	r24, 0x40	; 64
 1f6:	8a b9       	out	0x0a, r24	; 10
 1f8:	08 95       	ret
		case  7	:	DDRD|=(1<<PIND7); break;
 1fa:	8a b1       	in	r24, 0x0a	; 10
 1fc:	80 68       	ori	r24, 0x80	; 128
 1fe:	8a b9       	out	0x0a, r24	; 10
 200:	08 95       	ret
		
		case  8	:	DDRB|=(1<<PINB0); break;
 202:	84 b1       	in	r24, 0x04	; 4
 204:	81 60       	ori	r24, 0x01	; 1
 206:	84 b9       	out	0x04, r24	; 4
 208:	08 95       	ret
		case  9	:	DDRB|=(1<<PINB1); break;
 20a:	84 b1       	in	r24, 0x04	; 4
 20c:	82 60       	ori	r24, 0x02	; 2
 20e:	84 b9       	out	0x04, r24	; 4
 210:	08 95       	ret
		case 10	:	DDRB|=(1<<PINB2); break;
 212:	84 b1       	in	r24, 0x04	; 4
 214:	84 60       	ori	r24, 0x04	; 4
 216:	84 b9       	out	0x04, r24	; 4
 218:	08 95       	ret
		case 11 :	DDRB|=(1<<PINB3); break;
 21a:	84 b1       	in	r24, 0x04	; 4
 21c:	88 60       	ori	r24, 0x08	; 8
 21e:	84 b9       	out	0x04, r24	; 4
 220:	08 95       	ret
		case 12	:	DDRB|=(1<<PINB4); break;
 222:	84 b1       	in	r24, 0x04	; 4
 224:	80 61       	ori	r24, 0x10	; 16
 226:	84 b9       	out	0x04, r24	; 4
 228:	08 95       	ret
		case 13	:	DDRB|=(1<<PINB5); break;
 22a:	84 b1       	in	r24, 0x04	; 4
 22c:	80 62       	ori	r24, 0x20	; 32
 22e:	84 b9       	out	0x04, r24	; 4
 230:	08 95       	ret

00000232 <_ZN3LedC1Eh>:

	}
}

Led::Led(uint8_t pinNumber):pinNumber(pinNumber)
 232:	26 2f       	mov	r18, r22
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	fc 01       	movw	r30, r24
 238:	31 83       	std	Z+1, r19	; 0x01
 23a:	20 83       	st	Z, r18
{
	setPinDDR(pinNumber);
 23c:	86 2f       	mov	r24, r22
 23e:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <_Z9setPinDDRh>
 242:	08 95       	ret

00000244 <_Z41__static_initialization_and_destruction_0ii>:
		//if (sayac>0) { led1.Off(); led2.On(); led3.Off();}
		//if (sayac<0) { led1.Off(); led2.Off(); led3.On();}
		
	
    }
}
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	c1 f4       	brne	.+48     	; 0x278 <_Z41__static_initialization_and_destruction_0ii+0x34>
 248:	6f 3f       	cpi	r22, 0xFF	; 255
 24a:	7f 4f       	sbci	r23, 0xFF	; 255
 24c:	a9 f4       	brne	.+42     	; 0x278 <_Z41__static_initialization_and_destruction_0ii+0x34>
#include "GenIO.h"
#include  <avr/interrupt.h>



    Led led1(13);
 24e:	6d e0       	ldi	r22, 0x0D	; 13
 250:	8a e0       	ldi	r24, 0x0A	; 10
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	0e 94 19 01 	call	0x232	; 0x232 <_ZN3LedC1Eh>
    Led led2(7);
 258:	67 e0       	ldi	r22, 0x07	; 7
 25a:	88 e0       	ldi	r24, 0x08	; 8
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	0e 94 19 01 	call	0x232	; 0x232 <_ZN3LedC1Eh>
    Led led3(6);
 262:	66 e0       	ldi	r22, 0x06	; 6
 264:	86 e0       	ldi	r24, 0x06	; 6
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	0e 94 19 01 	call	0x232	; 0x232 <_ZN3LedC1Eh>
    ExtInt Encoder(1200);
 26c:	60 eb       	ldi	r22, 0xB0	; 176
 26e:	74 e0       	ldi	r23, 0x04	; 4
 270:	84 e0       	ldi	r24, 0x04	; 4
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	0e 94 b7 00 	call	0x16e	; 0x16e <_ZN6ExtIntC1Ej>
 278:	08 95       	ret

0000027a <main>:
    
int main(void)
{

	Encoder.setExtInt0();
 27a:	84 e0       	ldi	r24, 0x04	; 4
 27c:	91 e0       	ldi	r25, 0x01	; 1
 27e:	0e 94 bb 00 	call	0x176	; 0x176 <_ZN6ExtInt10setExtInt0Ev>
	Encoder.setExtInt1();
 282:	84 e0       	ldi	r24, 0x04	; 4
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	0e 94 c5 00 	call	0x18a	; 0x18a <_ZN6ExtInt10setExtInt1Ev>
	DDRD|=(1<<PIND6);
 28a:	8a b1       	in	r24, 0x0a	; 10
 28c:	80 64       	ori	r24, 0x40	; 64
 28e:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<PIND7);
 290:	8a b1       	in	r24, 0x0a	; 10
 292:	80 68       	ori	r24, 0x80	; 128
 294:	8a b9       	out	0x0a, r24	; 10
	

    while (1) 
    {
		if (Encoder.getSayac()%3==0) { PORTD|=(1<<PIND7);PORTD&=~(1<<PIND6);PORTB&=~(1<<PINB5); }
 296:	84 e0       	ldi	r24, 0x04	; 4
 298:	91 e0       	ldi	r25, 0x01	; 1
 29a:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN6ExtInt8getSayacEv>
 29e:	23 e0       	ldi	r18, 0x03	; 3
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	40 e0       	ldi	r20, 0x00	; 0
 2a4:	50 e0       	ldi	r21, 0x00	; 0
 2a6:	0e 94 9d 01 	call	0x33a	; 0x33a <__divmodsi4>
 2aa:	67 2b       	or	r22, r23
 2ac:	68 2b       	or	r22, r24
 2ae:	69 2b       	or	r22, r25
 2b0:	51 f4       	brne	.+20     	; 0x2c6 <main+0x4c>
 2b2:	8b b1       	in	r24, 0x0b	; 11
 2b4:	80 68       	ori	r24, 0x80	; 128
 2b6:	8b b9       	out	0x0b, r24	; 11
 2b8:	8b b1       	in	r24, 0x0b	; 11
 2ba:	8f 7b       	andi	r24, 0xBF	; 191
 2bc:	8b b9       	out	0x0b, r24	; 11
 2be:	85 b1       	in	r24, 0x05	; 5
 2c0:	8f 7d       	andi	r24, 0xDF	; 223
 2c2:	85 b9       	out	0x05, r24	; 5
 2c4:	e8 cf       	rjmp	.-48     	; 0x296 <main+0x1c>
		else if(Encoder.getSayac()%3==1 ) { PORTD|=(1<<PIND6); PORTD&=~(1<<PIND7); PORTB&=~(1<<PINB5); }
 2c6:	84 e0       	ldi	r24, 0x04	; 4
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN6ExtInt8getSayacEv>
 2ce:	23 e0       	ldi	r18, 0x03	; 3
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	50 e0       	ldi	r21, 0x00	; 0
 2d6:	0e 94 9d 01 	call	0x33a	; 0x33a <__divmodsi4>
 2da:	61 30       	cpi	r22, 0x01	; 1
 2dc:	71 05       	cpc	r23, r1
 2de:	81 05       	cpc	r24, r1
 2e0:	91 05       	cpc	r25, r1
 2e2:	51 f4       	brne	.+20     	; 0x2f8 <main+0x7e>
 2e4:	8b b1       	in	r24, 0x0b	; 11
 2e6:	80 64       	ori	r24, 0x40	; 64
 2e8:	8b b9       	out	0x0b, r24	; 11
 2ea:	8b b1       	in	r24, 0x0b	; 11
 2ec:	8f 77       	andi	r24, 0x7F	; 127
 2ee:	8b b9       	out	0x0b, r24	; 11
 2f0:	85 b1       	in	r24, 0x05	; 5
 2f2:	8f 7d       	andi	r24, 0xDF	; 223
 2f4:	85 b9       	out	0x05, r24	; 5
 2f6:	cf cf       	rjmp	.-98     	; 0x296 <main+0x1c>
		else if(Encoder.getSayac()%3==2 ) { PORTD&=~(1<<PIND6); PORTD&=~(1<<PIND7); PORTB|=(1<<PINB5); }
 2f8:	84 e0       	ldi	r24, 0x04	; 4
 2fa:	91 e0       	ldi	r25, 0x01	; 1
 2fc:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN6ExtInt8getSayacEv>
 300:	23 e0       	ldi	r18, 0x03	; 3
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	0e 94 9d 01 	call	0x33a	; 0x33a <__divmodsi4>
 30c:	62 30       	cpi	r22, 0x02	; 2
 30e:	71 05       	cpc	r23, r1
 310:	81 05       	cpc	r24, r1
 312:	91 05       	cpc	r25, r1
 314:	09 f0       	breq	.+2      	; 0x318 <main+0x9e>
 316:	bf cf       	rjmp	.-130    	; 0x296 <main+0x1c>
 318:	8b b1       	in	r24, 0x0b	; 11
 31a:	8f 7b       	andi	r24, 0xBF	; 191
 31c:	8b b9       	out	0x0b, r24	; 11
 31e:	8b b1       	in	r24, 0x0b	; 11
 320:	8f 77       	andi	r24, 0x7F	; 127
 322:	8b b9       	out	0x0b, r24	; 11
 324:	85 b1       	in	r24, 0x05	; 5
 326:	80 62       	ori	r24, 0x20	; 32
 328:	85 b9       	out	0x05, r24	; 5
 32a:	b5 cf       	rjmp	.-150    	; 0x296 <main+0x1c>

0000032c <_GLOBAL__sub_I_led1>:
		//if (sayac>0) { led1.Off(); led2.On(); led3.Off();}
		//if (sayac<0) { led1.Off(); led2.Off(); led3.On();}
		
	
    }
}
 32c:	6f ef       	ldi	r22, 0xFF	; 255
 32e:	7f ef       	ldi	r23, 0xFF	; 255
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	0e 94 22 01 	call	0x244	; 0x244 <_Z41__static_initialization_and_destruction_0ii>
 338:	08 95       	ret

0000033a <__divmodsi4>:
 33a:	05 2e       	mov	r0, r21
 33c:	97 fb       	bst	r25, 7
 33e:	1e f4       	brtc	.+6      	; 0x346 <__divmodsi4+0xc>
 340:	00 94       	com	r0
 342:	0e 94 b4 01 	call	0x368	; 0x368 <__negsi2>
 346:	57 fd       	sbrc	r21, 7
 348:	07 d0       	rcall	.+14     	; 0x358 <__divmodsi4_neg2>
 34a:	0e 94 c2 01 	call	0x384	; 0x384 <__udivmodsi4>
 34e:	07 fc       	sbrc	r0, 7
 350:	03 d0       	rcall	.+6      	; 0x358 <__divmodsi4_neg2>
 352:	4e f4       	brtc	.+18     	; 0x366 <__divmodsi4_exit>
 354:	0c 94 b4 01 	jmp	0x368	; 0x368 <__negsi2>

00000358 <__divmodsi4_neg2>:
 358:	50 95       	com	r21
 35a:	40 95       	com	r20
 35c:	30 95       	com	r19
 35e:	21 95       	neg	r18
 360:	3f 4f       	sbci	r19, 0xFF	; 255
 362:	4f 4f       	sbci	r20, 0xFF	; 255
 364:	5f 4f       	sbci	r21, 0xFF	; 255

00000366 <__divmodsi4_exit>:
 366:	08 95       	ret

00000368 <__negsi2>:
 368:	90 95       	com	r25
 36a:	80 95       	com	r24
 36c:	70 95       	com	r23
 36e:	61 95       	neg	r22
 370:	7f 4f       	sbci	r23, 0xFF	; 255
 372:	8f 4f       	sbci	r24, 0xFF	; 255
 374:	9f 4f       	sbci	r25, 0xFF	; 255
 376:	08 95       	ret

00000378 <__tablejump2__>:
 378:	ee 0f       	add	r30, r30
 37a:	ff 1f       	adc	r31, r31
 37c:	05 90       	lpm	r0, Z+
 37e:	f4 91       	lpm	r31, Z
 380:	e0 2d       	mov	r30, r0
 382:	09 94       	ijmp

00000384 <__udivmodsi4>:
 384:	a1 e2       	ldi	r26, 0x21	; 33
 386:	1a 2e       	mov	r1, r26
 388:	aa 1b       	sub	r26, r26
 38a:	bb 1b       	sub	r27, r27
 38c:	fd 01       	movw	r30, r26
 38e:	0d c0       	rjmp	.+26     	; 0x3aa <__udivmodsi4_ep>

00000390 <__udivmodsi4_loop>:
 390:	aa 1f       	adc	r26, r26
 392:	bb 1f       	adc	r27, r27
 394:	ee 1f       	adc	r30, r30
 396:	ff 1f       	adc	r31, r31
 398:	a2 17       	cp	r26, r18
 39a:	b3 07       	cpc	r27, r19
 39c:	e4 07       	cpc	r30, r20
 39e:	f5 07       	cpc	r31, r21
 3a0:	20 f0       	brcs	.+8      	; 0x3aa <__udivmodsi4_ep>
 3a2:	a2 1b       	sub	r26, r18
 3a4:	b3 0b       	sbc	r27, r19
 3a6:	e4 0b       	sbc	r30, r20
 3a8:	f5 0b       	sbc	r31, r21

000003aa <__udivmodsi4_ep>:
 3aa:	66 1f       	adc	r22, r22
 3ac:	77 1f       	adc	r23, r23
 3ae:	88 1f       	adc	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	1a 94       	dec	r1
 3b4:	69 f7       	brne	.-38     	; 0x390 <__udivmodsi4_loop>
 3b6:	60 95       	com	r22
 3b8:	70 95       	com	r23
 3ba:	80 95       	com	r24
 3bc:	90 95       	com	r25
 3be:	9b 01       	movw	r18, r22
 3c0:	ac 01       	movw	r20, r24
 3c2:	bd 01       	movw	r22, r26
 3c4:	cf 01       	movw	r24, r30
 3c6:	08 95       	ret

000003c8 <_exit>:
 3c8:	f8 94       	cli

000003ca <__stop_program>:
 3ca:	ff cf       	rjmp	.-2      	; 0x3ca <__stop_program>
